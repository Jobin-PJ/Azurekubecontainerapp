on: [push]

permissions:
  id-token: write  # Allow GitHub Actions to request an ID token
  contents: read   # Allow reading repository contents
# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: kubereg12
  CLUSTER_NAME: kubeaks-cluster
  CLUSTER_RESOURCE_GROUP: kube
  NAMESPACE: aks-pj
  IMAGE_NAME: pj-app
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - uses: actions/checkout@master
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: "1.5.0"  # Set your desired Terraform version
        
   # Log into Azure using the service principal credentials
    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
        client-secret: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
        tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Container build and push to a Azure Container registry (ACR)
    - run: |
        docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        
        # Set environment variables for the Terraform run
    - name: Set environment variables for Terraform
      run: |
        echo "ARM_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_AD_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
    
    - name: "Terraform Init"
      id: init
      run: terraform init
      working-directory: terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
       
    - name: "Terraform Plan"
      id: plan
      run: terraform plan -no-color -lock=false 
      working-directory: terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: "Terraform Apply"
      id: apply
      run: terraform apply -auto-approve -lock=false
      working-directory: terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
    - name: Set AKS context
      uses: azure/aks-set-context@v2
      with:
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
        client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
        client-secret: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
        tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
        
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    # Create imagepullsecret for Azure Container registry (ACR)
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    
    # Deploy app to AKS
    - name: Replace variables in deployment file
      run: |
        # Replace variables using sed
        sed -e "s|{{REGISTRY_NAME}}|${{ env.REGISTRY_NAME }}|g" \
            -e "s|{{GITHUB_SHA}}|${{ github.sha }}|g" \
            k8/deployment.yml > k8/deployment-substituted.yml
            
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          k8/deployment-substituted.yml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/mygradezimage:${{ github.sha }}
        imagepullsecrets: |
          ${{ env.REGISTRY_NAME }}-registry-connection
        namespace: ${{ env.NAMESPACE }}
    

